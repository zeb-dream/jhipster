# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    instance:
        prefer-ip-address: true
        ip-address: localhost
    client:
        enabled: true
        healthcheck:
            enabled: true
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
            defaultZone: http://admin:${jhipster.registry.password}@192.168.1.20:18761/eureka/

security:
  oauth2:
    resource:
      token-info-uri: http://localhost:19999/oauth/check_token
    client:
          client-id: internal # OAuth\u5BA2\u6237\u7AEFid\u3002OAuth\u63D0\u4F9B\u7AEF\u4F9D\u8D56\u8FD9\u4E2Aid\u6765\u8BC6\u522B\u5BA2\u6237\u7AEF\u3002
          client-secret: internal # \u5BA2\u6237\u7AEF\u7684\u79C1\u5BC6\u4FE1\u606F\u3002
          user-authorization-uri: http://localhost:19999/oauth/authorize # \u7528\u6237\u8BBF\u95EE\u8D44\u6E90\u9700\u8981\u8EAB\u4EFD\u9A8C\u8BC1\u65F6\u8DF3\u8F6C\u9875\u9762\u7684URI\u3002 \u6CE8\u610F\u8FD9\u4E2A\u5B57\u6BB5\u4E0D\u662F\u5FC5\u586B\u7684\uFF0C\u5B83\u4F9D\u8D56\u4E8E\u88AB\u652F\u6301\u7684OAuth 2\u7684\u914D\u7F6E\u6587\u4EF6\u7C7B\u578B\u3002
          access-token-uri: http://localhost:19999/oauth/token # \u63D0\u4F9B\u8BBF\u95EE\u53E3\u4EE4\u7684OAuth\u63D0\u4F9B\u8005\u7EC8\u7AEF\u7684\u7EDF\u4E00\u8D44\u6E90\u6807\u8BC6\u7B26\uFF08URI\uFF09\u3002
          grant-type: password # \u4EE5\u9017\u53F7\u5206\u9694\u7684\u5B57\u7B26\u4E32\u5217\u8868\uFF0C\u6807\u8BC6\u53EF\u8BBF\u95EE\u8D44\u6E90\u7684\u8303\u56F4\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u503C\u4E3A\u7A7A\u3002


spring:
    profiles:
        active: dev
        include: swagger
    autoconfigure:
        exclude: org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use gulp + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:mysql://192.168.1.20:10001/gateway?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: root
        password: P@ssword
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: true
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
            hibernate.cache.hazelcast.instance_name: gateway
            hibernate.cache.use_minimal_puts: true
            hibernate.cache.hazelcast.use_lite_member: true
    data:
        cassandra:
            contactPoints: localhost
            protocolVersion: V4
            compression: LZ4
            keyspaceName: gateway
            repositories:
                enabled: false
    mail:
        host: localhost
        port: 25
        username:
        password:
    messages:
        cache-seconds: 1
    thymeleaf:
        cache: false

liquibase:
    contexts: dev

# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alias gateway -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 8443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        keyStoreType: PKCS12
#        keyAlias: gateway
# ===================================================================
server:
    port: 19998

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    gateway:
        rate-limiting: # Read the documentation in the GatewayConfiguration class before enabling.
            enabled: false
        authorized-microservices-endpoints: # Access Control Policy, if left empty for a route, all endpoints will be accessible
            app1: /api,/v2/api-docs # recommended dev configuration
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
    cache: # Cache configuration
        hazelcast: # Hazelcast distributed cache
            time-to-live-seconds: 3600
            backup-count: 1
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: gateway@localhost
        base-url: http://127.0.0.1:19998
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite: # Use the "graphite" Maven profile to have the Graphite dependencies
            enabled: false
            host: localhost
            port: 2003
            prefix: gateway
        prometheus: # Use the "prometheus" Maven profile to have the Prometheus dependencies
            enabled: false
            endpoint: /prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            reportFrequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
        spectator-metrics: # Reports Spectator Circuit Breaker metrics in the logs
            enabled: false
            # edit spring.metrics.export.delay-millis to set report frequency
    cors:
        allowed-origins: "*"
        allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        allowed-headers: "*"
        exposed-headers:
        allow-credentials: true
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================
M002:
    m002url: http://m002_authority
ServerUrl:
    gatewayUrl: http://localhost:19998

application:
