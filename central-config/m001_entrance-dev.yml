info: m001_entrance
server:
  port: 8081

eureka:
    instance:
        prefer-ip-address: true
#        ip-address: localhost
    client:
        enabled: true
        healthcheck:
            enabled: true
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
            defaultZone: http://admin:${jhipster.registry.password}@localhost:18761/eureka/

spring:
    profiles:
        active: dev
        include: swagger
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false # we use gulp + BrowserSync for livereload
    jackson:
        serialization.indent_output: true
    datasource:
        url: jdbc:mysql://192.168.1.112:10001/uaa?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: root
        password: root
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        show-sql: true

        
    security:
      oauth2:
        resource:
          token-info-uri: http://localhost:9999/uaa/oauth/check_token
        client:
              client-id: internal # OAuth客户端id。OAuth提供端依赖这个id来识别客户端。
              client-secret: internal # 客户端的私密信息。
              user-authorization-uri: http://localhost:9999/uaa/oauth/authorize # 用户访问资源需要身份验证时跳转页面的URI。 注意这个字段不是必填的，它依赖于被支持的OAuth2的配置文件类型。
              access-token-uri: http://localhost:9999/uaa/oauth/token # 提供访问口令的OAuth提供者终端的统一资源标识符（URI）。
              grant-type: client_credentials # 以逗号分隔的字符串列表，标识可访问资源的范围。默认情况下，该值为空。
              token_key: http://localhost:9999/uaa/oauth/token_key
   
    mvc:
      view:
        prefix: /WEB-INF/jsp/
        suffix: .jsp
